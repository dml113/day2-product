name: Prod CI/CD Pipeline

on:
  push:
    branches: [prod]
  pull_request:
    types: [labeled]
    branches: [prod]

jobs:
  auto-merge-approval:
    if: github.event.label.name == 'approval'
    runs-on: prod
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Merge PR with approval label
        run: gh pr merge ${{ github.event.pull_request.number }} --merge --admin
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-deploy:
    if: github.event_name == 'push'
    runs-on: prod
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup QEMU and Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-role
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push multi-arch image
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/product/prod
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag $IMAGE_URI:${{ github.sha }} \
            --push .

      - name: Update prod.values.yaml
        run: |
          sed -i "s|tag: .*|tag: '${GITHUB_SHA}'|" values/prod.values.yaml
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add values/prod.values.yaml
          git commit -m "chore: bump prod image tag to ${GITHUB_SHA}"
          git pull --rebase origin prod || true
          git push origin prod

      - name: ArgoCD Sync Prod App
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
        run: |
          argocd login $ARGOCD_SERVER --username admin --password Skill53## --insecure
          argocd app sync dev

  fast-forward-dev:
    if: github.event_name == 'pull_request' && github.event.label.name == 'approval'
    runs-on: [self-hosted, linux, x64, prod]
    needs: auto-merge-approval
    steps:
      - name: Fast-forward dev branch
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout dev
          git merge --ff-only origin/prod
          git push origin dev
